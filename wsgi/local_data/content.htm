<h1>CMSimply 1.0</h1>
<p>改用&nbsp;<a href="https://www.tinymce.com/">https://www.tinymce.com/</a> 4.0</p>
<p>採用的 shtinymce4 因為不是 cdn tinymce4 的 core plugin,&nbsp;因此使用時必須自行額外加入 &nbsp;custom plugin 的 .js 與 .css 檔案.</p>
<p>程式碼 highlight:</p>
<pre class="brush:html;auto-links:false;toolbar:false" contenteditable="false">for i in range(10):
    print("hello cmsimply!")</pre>
<p>上傳圖檔並引用:</p>
<p><img src="/download/?filepath=/home/amd/under_github/cmsimply/wsgi//local_data//images/kmol_1172x340_color_3yrs.png" alt="" width="300" height="87" /></p>
<p><a href="/download/?filepath=/home/amd/under_github/cmsimply/wsgi//local_data//downloads/spikeball.stl">連結上傳檔案</a>&nbsp;(下載上傳的 stl 零件檔案)</p>
<p>&nbsp;嵌入上傳的 stl 零件檔案</p>
<p><iframe src="/static/viewstl.html?src=/downloads/spikeball.stl" width="600" height="600"></iframe></p>
<h1>主要設定檔</h1><p>editorhead 程式碼:</p><pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">def editorhead():    return '''    &lt;br /&gt;&lt;script src="//cdn.tinymce.com/4/tinymce.min.js"&gt;&lt;/script&gt;&lt;script src="/static/tinymce4/tinymce/plugins/sh4tinymce/plugin.min.js"&gt;&lt;/script&gt;&lt;link rel = "stylesheet" href = "/static/tinymce4/tinymce/plugins/sh4tinymce/style/style.css"&gt;&lt;script&gt;tinymce.init({  selector: "textarea",  height: 500,  element_format : "xhtml",  language : "en",  plugins: [    'advlist autolink lists link image charmap print preview hr anchor pagebreak',    'searchreplace wordcount visualblocks visualchars code fullscreen',    'insertdatetime media nonbreaking save table contextmenu directionality',    'emoticons template paste textcolor colorpicker textpattern imagetools sh4tinymce'  ],  toolbar1: 'insertfile save undo redo | styleselect | bold italic | alignleft aligncenter alignright alignjustify | bullist numlist outdent indent',  toolbar2: 'link image | print preview media | forecolor backcolor emoticons | code sh4tinymce',  relative_urls: false,  toolbar_items_size: 'small',  file_picker_callback: function(callback, value, meta) {        cmsFilePicker(callback, value, meta);    },  templates: [    { title: 'Test template 1', content: 'Test 1' },    { title: 'Test template 2', content: 'Test 2' }  ],  content_css: [    '//fonts.googleapis.com/css?family=Lato:300,300i,400,400i',    '//www.tinymce.com/css/codepen.min.css'  ]});function cmsFilePicker(callback, value, meta) {    tinymce.activeEditor.windowManager.open({        title: 'Uploaded File Browser',        url: '/file_selector?type=' + meta.filetype,        width: 800,        height: 550,    }, {        oninsert: function (url, objVals) {            callback(url, objVals);        }    });};&lt;/script&gt;'''</pre><p>tinymce_editor 程式碼:</p><pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">def tinymce_editor(menu_input=None, editor_content=None, page_order=None):    sitecontent =file_get_contents(data_dir+"content.htm")    editor = set_admin_css()+editorhead()+'''&lt;/head&gt;'''+editorfoot()    # edit all pages    if page_order == None:        outstring = editor + "&lt;div class='container'&gt;&lt;nav&gt;"+ \            menu_input+"&lt;/nav&gt;&lt;section&gt;&lt;form method='post' action='savePage'&gt; \     &lt;textarea class='simply-editor' name='page_content' cols='50' rows='15'&gt;"+editor_content+"&lt;/textarea&gt; \     &lt;input type='submit' value='save'&gt;&lt;/form&gt;&lt;/section&gt;&lt;/body&gt;&lt;/html&gt;"    else:        # add viewpage button wilie single page editing        head, level, page = parse_content()        outstring = editor + "&lt;div class='container'&gt;&lt;nav&gt;"+ \            menu_input+"&lt;/nav&gt;&lt;section&gt;&lt;form method='post' action='ssavePage'&gt; \     &lt;textarea class='simply-editor' name='page_content' cols='50' rows='15'&gt;"+editor_content+"&lt;/textarea&gt; \&lt;input type='hidden' name='page_order' value='"+str(page_order)+"'&gt; \     &lt;input type='submit' value='save'&gt;"        outstring += '''&lt;input type=button onClick="location.href='get_page?heading='''+head[page_order]+ \            ''''" value='viewpage'&gt;&lt;/form&gt;&lt;/section&gt;&lt;/body&gt;&lt;/html&gt;'''    return outstring</pre><p>file_selector_script 程式碼:</p><pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">def file_selector_script():    return '''&lt;script language="javascript" type="text/javascript"&gt;$(function(){    $('.a').on('click', function(event){        setLink();    });});function setLink (url, objVals) {    top.tinymce.activeEditor.windowManager.getParams().oninsert(url, objVals);    top.tinymce.activeEditor.windowManager.close();    return false;}&lt;/script&gt;'''</pre><p>Class CMSimply&nbsp;</p><p>file_selector 程式碼:</p><pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">@cherrypy.exposedef file_selector(self, type=None, page=1, item_per_page=10, keyword=None):    if not self.isAdmin():        raise cherrypy.HTTPRedirect("login")    else:        #if type == "downloads":        if type == "file":            #return downloads_file_selector()            # 請注意因為在 editorhead 以 meta 判斷 filetyp, 所以前段 type 為 file, 但是後段必須與 file_lister 中的 type = downloads 配合, 所以目前前後的 type 字串不同, 之後整合修改時將修正, 設法讓  type 前後一致            type = 'downloads'            return file_lister("downloads", type, page, item_per_page)        elif type == "image":            #return images_file_selector()            return file_lister("images", type, page, item_per_page)</pre><p>&nbsp;</p>